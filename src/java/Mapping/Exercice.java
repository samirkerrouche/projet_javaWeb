package Mapping;
// Generated 8 f√©vr. 2020 15:26:40 by Hibernate Tools 4.3.1


import java.util.HashSet;
import java.util.Objects;
import java.util.Set;

/**
 * Exercice generated by hbm2java
 */
public class Exercice  implements java.io.Serializable {


     private Integer codeexo;
     private String nomexo;
     private byte[] imageexo;
     private String descriptionexo;
     private Set composerSeances = new HashSet(0);
     private Set executerExos = new HashSet(0);
     private Set composerCircuits = new HashSet(0);

    public Exercice() {
    }

    public Exercice(String nomexo, byte[] imageexo, String descriptionexo, Set composerSeances, Set executerExos, Set composerCircuits) {
       this.nomexo = nomexo;
       this.imageexo = imageexo;
       this.descriptionexo = descriptionexo;
       this.composerSeances = composerSeances;
       this.executerExos = executerExos;
       this.composerCircuits = composerCircuits;
    }
   
    public Integer getCodeexo() {
        return this.codeexo;
    }
    
    public void setCodeexo(Integer codeexo) {
        this.codeexo = codeexo;
    }
    public String getNomexo() {
        return this.nomexo;
    }
    
    public void setNomexo(String nomexo) {
        this.nomexo = nomexo;
    }
    public byte[] getImageexo() {
        return this.imageexo;
    }
    
    public void setImageexo(byte[] imageexo) {
        this.imageexo = imageexo;
    }
    public String getDescriptionexo() {
        return this.descriptionexo;
    }
    
    public void setDescriptionexo(String descriptionexo) {
        this.descriptionexo = descriptionexo;
    }
    public Set getComposerSeances() {
        return this.composerSeances;
    }
    
    public void setComposerSeances(Set composerSeances) {
        this.composerSeances = composerSeances;
    }
    public Set getExecuterExos() {
        return this.executerExos;
    }
    
    public void setExecuterExos(Set executerExos) {
        this.executerExos = executerExos;
    }
    public Set getComposerCircuits() {
        return this.composerCircuits;
    }
    
    public void setComposerCircuits(Set composerCircuits) {
        this.composerCircuits = composerCircuits;
    }

    @Override
    public int hashCode() {
        int hash = 7;
        hash = 53 * hash + Objects.hashCode(this.codeexo);
        return hash;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }
        if (obj == null) {
            return false;
        }
        if (getClass() != obj.getClass()) {
            return false;
        }
        final Exercice other = (Exercice) obj;
        if (!Objects.equals(this.codeexo, other.codeexo)) {
            return false;
        }
        return true;
    }

    @Override
    public String toString() {
        return "Exercice{" + "codeexo=" + codeexo + ", nomexo=" + nomexo + ", imageexo=" + imageexo + ", descriptionexo=" + descriptionexo + '}';
    }

    
 

}


