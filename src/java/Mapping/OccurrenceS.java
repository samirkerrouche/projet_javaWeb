package Mapping;
// Generated 8 f√©vr. 2020 15:26:40 by Hibernate Tools 4.3.1


import java.util.Date;
import java.util.HashSet;
import java.util.Objects;
import java.util.Set;

/**
 * OccurrenceS generated by hbm2java
 */
public class OccurrenceS  implements java.io.Serializable {


     private Integer codeoccs;
     private Seance seance;
     private Date dateoccs;
     private Boolean isvalid;
     private Set executerCircuits = new HashSet(0);
     private Set executerExos = new HashSet(0);
     private Set evaluers = new HashSet(0);

    public OccurrenceS() {
    }

	
    public OccurrenceS(Seance seance) {
        this.seance = seance;
    }
    public OccurrenceS(Seance seance, Date dateoccs, Boolean isvalid, Set executerCircuits, Set executerExos, Set evaluers) {
       this.seance = seance;
       this.dateoccs = dateoccs;
       this.isvalid = isvalid;
       this.executerCircuits = executerCircuits;
       this.executerExos = executerExos;
       this.evaluers = evaluers;
    }
   
    public Integer getCodeoccs() {
        return this.codeoccs;
    }
    
    public void setCodeoccs(Integer codeoccs) {
        this.codeoccs = codeoccs;
    }
    public Seance getSeance() {
        return this.seance;
    }
    
    public void setSeance(Seance seance) {
        this.seance = seance;
    }
    public Date getDateoccs() {
        return this.dateoccs;
    }
    
    public void setDateoccs(Date dateoccs) {
        this.dateoccs = dateoccs;
    }
    public Boolean getIsvalid() {
        return this.isvalid;
    }
    
    public void setIsvalid(Boolean isvalid) {
        this.isvalid = isvalid;
    }
    public Set getExecuterCircuits() {
        return this.executerCircuits;
    }
    
    public void setExecuterCircuits(Set executerCircuits) {
        this.executerCircuits = executerCircuits;
    }
    public Set getExecuterExos() {
        return this.executerExos;
    }
    
    public void setExecuterExos(Set executerExos) {
        this.executerExos = executerExos;
    }
    public Set getEvaluers() {
        return this.evaluers;
    }
    
    public void setEvaluers(Set evaluers) {
        this.evaluers = evaluers;
    }

    @Override
    public int hashCode() {
        int hash = 5;
        hash = 53 * hash + Objects.hashCode(this.codeoccs);
        return hash;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }
        if (obj == null) {
            return false;
        }
        if (getClass() != obj.getClass()) {
            return false;
        }
        final OccurrenceS other = (OccurrenceS) obj;
        if (!Objects.equals(this.codeoccs, other.codeoccs)) {
            return false;
        }
        if (!Objects.equals(this.dateoccs, other.dateoccs)) {
            return false;
        }
        if (!Objects.equals(this.isvalid, other.isvalid)) {
            return false;
        }
        return true;
    }

    

    @Override
    public String toString() {
        return "OccurrenceS{" + "codeoccs=" + codeoccs + ", dateoccs=" + dateoccs + ", isvalid=" + isvalid +'}';
    }



}


